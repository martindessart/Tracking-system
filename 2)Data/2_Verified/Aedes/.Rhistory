trial_nb <- 10 #number of trials -> 10 for group Expe & Ctrl.1, 1 for Ctrl.2
raw<-read.table(file=paste(filename,"_V.csv",sep=""), sep="",header=T)
raw %>% count(ID)
frame_max<-max(raw$frame) #max frames
## 2) Find stimulation response ranges ----
#By looking at the video, enter the second from which the first trial is applied
beg_1trial <- 127 #sec
## 2) Find stimulation response ranges ----
#By looking at the video, enter the second from which the first trial is applied
beg_1trial <- 127 #sec
end_1trial <- beg_1trial+3 #sec
adjust <- 22 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
Display_response(Sti_range,10) #input = Df + trial number to plot
Display_response(Sti_range,1) #input = Df + trial number to plot
adjust <- -22 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
adjust <- 22 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
Display_response(Sti_range,10) #input = Df + trial number to plot
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
geom_smooth(aes(x=frame,y=-pos_y),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
fin<-ranges[nb_Sti,3] #Find good ranges from the df
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
geom_smooth(aes(x=frame,y=-pos_y),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
Display_response(Sti_range,10) #input = Df + trial number to plot
## 4) Classify data ----
Sti_Data<- function(rg) {
df_tot = data.frame()
for (i in 1:trial_nb) {
nam<-paste("st",i,sep="")
interval<-
nam1<-raw %>%
filter(frame>=rg[i,2] & frame< rg[i,3]) %>%
mutate(cat=i) %>%
mutate(gp="Sti") #Add variable that separate Sti and Iti
df_tot<-rbind(df_tot,nam1)
}
return(df_tot)
}
Df_Sti<-Sti_Data(Sti_range)
Interval_Data<- function(rg) {
df_tot = data.frame()
for (i in 1:trial_nb) {
nam1<-raw %>%
filter(frame>rg[i,3] & frame<rg[(i+1),2]) %>%
mutate(cat=i) %>%
mutate(gp="ITI")
df_tot<-rbind(df_tot,nam1)
}
return(df_tot)
}
Df_Iti<-Interval_Data(Sti_range)
### Check and combine ----
Df_Sti %>% count(cat)
Df_Iti %>% count(cat)
Df_Tot<-bind_rows(Df_Sti,Df_Iti)
setwd("/Users/martin/Desktop/2)Data/3_Classified/Aedes")
write.table(Df_Tot, file=paste(filename, "_C.csv", sep=""))
rm(list=ls())
## 1) Open file ----
setwd("/Users/martin/Desktop/2)Data/2_Verified/Aedes")
filename="R3"
trial_nb <- 1 #number of trials -> 10 for group Expe & Ctrl.1, 1 for Ctrl.2
raw<-read.table(file=paste(filename,"_V.csv",sep=""), sep="",header=T)
raw %>% count(ID)
frame_max<-max(raw$frame) #max frames
## 2) Find stimulation response ranges ----
#By looking at the video, enter the second from which the first trial is applied
beg_1trial <- 14 #sec
end_1trial <- beg_1trial+3 #sec
adjust <- 10 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#77d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#77d704',alpha=0.2)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#77d704',alpha=0.2)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',alpha=0.2)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704')
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704')
}
Display_response(Sti_range,1) #input = Df + trial number to plot
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',alpha=0.2)
}
rm(list=ls())
## 1) Open file ----
setwd("/Users/martin/Desktop/2)Data/2_Verified/Aedes")
filename="R4"
trial_nb <- 10 #number of trials -> 10 for group Expe & Ctrl.1, 1 for Ctrl.2
raw<-read.table(file=paste(filename,"_V.csv",sep=""), sep="",header=T)
raw %>% count(ID)
frame_max<-max(raw$frame) #max frames
## 2) Find stimulation response ranges ----
#By looking at the video, enter the second from which the first trial is applied
beg_1trial <- 114 #sec
end_1trial <- beg_1trial+3 #sec
adjust <- 26 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
Display_response(Sti_range,10) #input = Df + trial number to plot
Display_response(Sti_range,1) #input = Df + trial number to plot
adjust <- 15 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
Display_response(Sti_range,10) #input = Df + trial number to plot
adjust <- 5 #frames to adjust precisely the location of the 1st trial
Find_stimuli_ranges <- function(beg_1trial,end_1trial) {
s1d<-(beg_1trial)*25 #Convert in frames
s1f<-((end_1trial)*25)-1 #Convert in frames
dist0 <- vector("numeric", trial_nb)
dist1 <- vector("numeric", trial_nb)
step<-1
counter<-vector("numeric", trial_nb)
for (i in 1:trial_nb) { #For each trial, calculate the frame number associated
dist0[i]<-(s1d+(step*25)-adjust)
dist1[i]<-(s1f+(step*25)-adjust)
step<-step+120
counter[i]<-i
}
df <- data.frame(counter,dist0,dist1) #extract ranges
colnames(df) <- c("Trial","frameD","frameF")
return(df)
}
Sti_range<-Find_stimuli_ranges(beg_1trial,end_1trial)
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',color=NA)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
Display_response(Sti_range,10) #input = Df + trial number to plot
## 4) Classify data ----
Sti_Data<- function(rg) {
df_tot = data.frame()
for (i in 1:trial_nb) {
nam<-paste("st",i,sep="")
interval<-
nam1<-raw %>%
filter(frame>=rg[i,2] & frame< rg[i,3]) %>%
mutate(cat=i) %>%
mutate(gp="Sti") #Add variable that separate Sti and Iti
df_tot<-rbind(df_tot,nam1)
}
return(df_tot)
}
Df_Sti<-Sti_Data(Sti_range)
Interval_Data<- function(rg) {
df_tot = data.frame()
for (i in 1:trial_nb) {
nam1<-raw %>%
filter(frame>rg[i,3] & frame<rg[(i+1),2]) %>%
mutate(cat=i) %>%
mutate(gp="ITI")
df_tot<-rbind(df_tot,nam1)
}
return(df_tot)
}
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',alpha=0.2)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
Display_response(Sti_range,5) #input = Df + trial number to plot
## 3) Display trial responses ----
Display_response <-function(ranges,nb_Sti) {
deb<-ranges[nb_Sti,2] #Find good ranges from the df
fin<-ranges[nb_Sti,3] #Find good ranges from the df
sti<-raw %>%
filter(frame>deb-500&frame<fin+500) #Extract data
ggplot(sti)+ #Display data
geom_line(aes(x=frame,y=-pos_y,colour=as.factor(ID)))+
#geom_smooth(aes(x=frame,y=-posf),method="gam",color="#41A191")+
theme_light()+
geom_rect(data=ranges,aes(xmin=deb, xmax=fin,
ymin=(-400), ymax=(0)), fill='#0677d704',alpha=0.2)
}
Display_response(Sti_range,1) #input = Df + trial number to plot
